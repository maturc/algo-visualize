{"version":3,"sources":["components/Tutorial.js","components/defaultObstacles.js","components/Breadth.js","components/Navigation.js","App.js","index.js"],"names":["Tutorial","props","gif","pageContent","disableButton1","disableButton2","tutorialPageNumber","src","className","class","onClick","showTutorial","disabled","previousPage","nextPage","defaultObstacles","Breadth","canvasHex","React","createRef","mouseCanvas","startHexCanvas","obstacleCanvas","startHexTargetCanvas","handleMouseUp","bind","handleMouseMove","handleMouseDown","handleMouseClick","clearObstacles","state","radius","colorScheme","green","orange","brightOrange","purple","hexGrey","selectionGrey","canvasSize","canvasWidth","canvasHeight","gridStartingPoint","x","y","startHexCoord","q","r","gridSize","startHexDrag","obstacleArray","destination","this","width","height","current","drawHexGrid","drawStartingHex","drawObstacles","center","i","angle_deg","angle_rad","Math","PI","cos","sin","canvasID","lineColor","fillColor","lineWidth","ctx","getContext","fillStyle","strokeStyle","beginPath","startPoint","getHexCornerCoordinates","moveTo","nextPoint","lineTo","stroke","closePath","fill","hexWidth","round","sqrt","hexHeight","hexCount","j","drawHex","undefined","e","hexCoords","mousePositionToHexCoords","hexToPixel","isObstacle","setState","clearCanvas","forEach","obstacle","JSON","stringify","getCanvasPosition","left","top","offsetX","pageX","offsetY","pageY","targetCanvas","targetHex","breadthFirstSearch","pixelToHex","rect","getBoundingClientRect","point","size","rhombusGridToRectangleGridCoords","floor","hex","currentHex","startingHex","neighborQueue","MySet","add","goalHex","cameFrom","queueLoop","parse","neighborArray","getHexNeighbors","item","itemStr","last","push","childHex","parentHex","length","tracePath","lastPoint","path","start","end","drawLine","lineCap","newObstacle","splice","element","clearRect","page","href","ref","onMouseMove","onMouseDown","onMouseUp","Component","value","Set","Navigation","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.323b64fb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Tutorial(props) {\r\n  let page = props.tutorialPageNumber;\r\n  let gif;\r\n  let pageContent;\r\n  let disableButton1;\r\n  let disableButton2;\r\n  switch(page) {\r\n    default:\r\n      gif = <img src=\"./page1-tutorial.gif\"/>\r\n      pageContent = <p className=\"modal__paragraph\">Move your mouse to change the destination.</p>\r\n      disableButton1 = true;\r\n      disableButton2 = false;\r\n      break;\r\n    case 2:\r\n      gif = <img src=\"./page2-tutorial.gif\"/>\r\n      pageContent = <p className=\"modal__paragraph\">Click on any hex to turn it into an obstacle, or click on obstacles to remove them.</p>\r\n      disableButton1 = false;\r\n      disableButton2 = false;\r\n      break;\r\n    case 3:\r\n      gif = <img src=\"./page3-tutorial.gif\"/>\r\n      pageContent = <p className=\"modal__paragraph\">Click and drag the green starting hex with the left mouse button to move it.</p>\r\n      disableButton1 = false;\r\n      disableButton2 = true;\r\n  }\r\n  return(\r\n    <div className=\"modal\">      \r\n      <div class=\"modal__content\">\r\n        <span class=\"modal__close\" onClick={props.showTutorial}>&times;</span>\r\n        <div className=\"modal__wrapper\">\r\n          {gif}\r\n          {pageContent}\r\n        <button disabled={disableButton1 && true} onClick={props.previousPage}>Previous</button>\r\n        <button disabled={disableButton2 && true} onClick={props.nextPage}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tutorial;","const defaultObstacles = [\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 1,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 2,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 3,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 4,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 5,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 6,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 7,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 8,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 9,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 10,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 12,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 11,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 13,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 14,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 15,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 0\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 1\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 2\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 3\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 4\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 5\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 6\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 7\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 8\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 9\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 10\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 11\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 12\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 13\r\n  },\r\n  {\r\n    \"q\": 16,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 15,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 14,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 13,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 12,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 11,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 10,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 9,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 7,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 8,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 6,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 5,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 4,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 3,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 2,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 1,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 14\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 13\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 12\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 11\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 10\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 9\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 8\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 7\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 6\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 5\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 4\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 3\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 2\r\n  },\r\n  {\r\n    \"q\": 0,\r\n    \"r\": 1\r\n  },\r\n  {\r\n    \"q\": 6,\r\n    \"r\": 9\r\n  },\r\n  {\r\n    \"q\": 4,\r\n    \"r\": 6\r\n  },\r\n  {\r\n    \"q\": 4,\r\n    \"r\": 7\r\n  },\r\n  {\r\n    \"q\": 5,\r\n    \"r\": 8\r\n  },\r\n  {\r\n    \"q\": 5,\r\n    \"r\": 9\r\n  },\r\n  {\r\n    \"q\": 7,\r\n    \"r\": 4\r\n  },\r\n  {\r\n    \"q\": 8,\r\n    \"r\": 4\r\n  },\r\n  {\r\n    \"q\": 9,\r\n    \"r\": 4\r\n  },\r\n  {\r\n    \"q\": 3,\r\n    \"r\": 11\r\n  },\r\n  {\r\n    \"q\": 4,\r\n    \"r\": 12\r\n  },\r\n  {\r\n    \"q\": 3,\r\n    \"r\": 10\r\n  },\r\n  {\r\n    \"q\": 4,\r\n    \"r\": 13\r\n  },\r\n  {\r\n    \"q\": 4,\r\n    \"r\": 2\r\n  },\r\n  {\r\n    \"q\": 3,\r\n    \"r\": 3\r\n  },\r\n  {\r\n    \"q\": 14,\r\n    \"r\": 11\r\n  },\r\n  {\r\n    \"q\": 14,\r\n    \"r\": 12\r\n  },\r\n  {\r\n    \"q\": 13,\r\n    \"r\": 12\r\n  },\r\n  {\r\n    \"q\": 12,\r\n    \"r\": 12\r\n  },\r\n  {\r\n    \"q\": 11,\r\n    \"r\": 12\r\n  },\r\n  {\r\n    \"q\": 10,\r\n    \"r\": 12\r\n  },\r\n  {\r\n    \"q\": 10,\r\n    \"r\": 5\r\n  },\r\n  {\r\n    \"q\": 10,\r\n    \"r\": 4\r\n  },\r\n  {\r\n    \"q\": 12,\r\n    \"r\": 3\r\n  },\r\n  {\r\n    \"q\": 13,\r\n    \"r\": 4\r\n  },\r\n  {\r\n    \"q\": 13,\r\n    \"r\": 5\r\n  },\r\n  {\r\n    \"q\": 14,\r\n    \"r\": 6\r\n  },\r\n  {\r\n    \"q\": 11,\r\n    \"r\": 7\r\n  },\r\n  {\r\n    \"q\": 14,\r\n    \"r\": 10\r\n  },\r\n  {\r\n    \"q\": 13,\r\n    \"r\": 7\r\n  },\r\n  {\r\n    \"q\": 3,\r\n    \"r\": 5\r\n  },\r\n  {\r\n    \"q\": 4,\r\n    \"r\": 1\r\n  },\r\n  {\r\n    \"q\": 12,\r\n    \"r\": 7\r\n  }\r\n];\r\nexport default defaultObstacles;","import React from 'react';\r\nimport Tutorial from './Tutorial'\r\nimport defaultObstacles from './defaultObstacles'\r\n\r\nclass Breadth extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasHex = React.createRef();\r\n    this.mouseCanvas = React.createRef();\r\n    this.startHexCanvas = React.createRef();\r\n    this.obstacleCanvas = React.createRef();\r\n    this.startHexTargetCanvas = React.createRef();\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseClick = this.handleMouseClick.bind(this);\r\n    this.showTutorial = this.showTutorial.bind(this);\r\n    this.previousPage = this.previousPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n    this.clearObstacles = this.clearObstacles.bind(this);\r\n\r\n    this.state = {\r\n      radius: 24, //should be an even number, else the grid is missaligned\r\n      colorScheme: { green: \"#338b2b\", orange: \"#cc6109\", brightOrange: \"#ff790a\", purple: \"#bb0bc4\", hexGrey: \"#cdcdcd\", selectionGrey: \"#a8a8a8\" },\r\n      canvasSize: { canvasWidth: 800, canvasHeight: 600  },\r\n      gridStartingPoint: { x: 50, y: 50 },\r\n      startHexCoord: { q: 8, r: 7},\r\n      gridSize: { x: 17, y: 15 },\r\n      startHexDrag: false,\r\n      obstacleArray: defaultObstacles,\r\n      destination: {},\r\n      showTutorial: false,\r\n      tutorialPageNumber: 1\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { canvasWidth: width, canvasHeight: height } = this.state.canvasSize;\r\n\r\n    this.canvasHex.current.width            = width;\r\n    this.mouseCanvas.current.width          = width;\r\n    this.startHexTargetCanvas.current.width = width;\r\n    this.startHexCanvas.current.width       = width;\r\n    this.obstacleCanvas.current.width       = width;\r\n    \r\n    this.canvasHex.current.height            = height;\r\n    this.mouseCanvas.current.height          = height;\r\n    this.startHexTargetCanvas.current.height = height;\r\n    this.startHexCanvas.current.height       = height;\r\n    this.obstacleCanvas.current.height       = height;\r\n\r\n    this.drawHexGrid(this.canvasHex.current, this.state.radius);\r\n    this.drawStartingHex();\r\n    this.drawObstacles(this.state.obstacleArray);\r\n  }\r\n  getHexCornerCoordinates(center, radius, i) {\r\n    const angle_deg = 60 * i - 30;\r\n    const angle_rad = Math.PI / 180 * angle_deg;\r\n    \r\n    return { x: center.x + radius * Math.cos(angle_rad), \r\n             y: center.y + radius * Math.sin(angle_rad) };\r\n  }\r\n  drawHex(canvasID, center, radius, lineColor=\"#5e5e5e\", fillColor=this.state.colorScheme.hexGrey, lineWidth=2) {\r\n    const ctx = canvasID.getContext(\"2d\");\r\n    ctx.lineWidth   = lineWidth;\r\n    ctx.fillStyle   = fillColor;\r\n    ctx.strokeStyle = lineColor;\r\n    ctx.beginPath();\r\n    const startPoint = this.getHexCornerCoordinates(center, radius, 0);\r\n    ctx.moveTo(startPoint.x, startPoint.y);\r\n    for (let i = 1; i <= 6; i++) {\r\n      const nextPoint   = this.getHexCornerCoordinates(center, radius, i);\r\n      ctx.lineTo(nextPoint.x, nextPoint.y);\r\n    }\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n    ctx.fill();\r\n  }\r\n  drawHexGrid(canvasID, radius) {\r\n    const hexWidth = Math.round(Math.sqrt(3) * radius);\r\n    const hexHeight = 2 * radius;\r\n    const hexCount = this.state.gridSize;\r\n    const gridStartingPoint = this.state.gridStartingPoint;\r\n    let center = { ...gridStartingPoint };\r\n    \r\n    for (let i = 0; i < hexCount.y; i++) {\r\n      for (let j = 0; j < hexCount.x; j++) {\r\n        this.drawHex(canvasID, center, radius, undefined, undefined, 1);\r\n        center.x += hexWidth;\r\n      }\r\n      center.x = gridStartingPoint.x + ((hexWidth/2) * ((i+1)%2));\r\n      center.x = Math.round(center.x);\r\n      center.y += hexHeight * 3/4;\r\n      center.y = Math.round(center.y);\r\n    }\r\n  }\r\n  handleMouseMove(e) {\r\n    const hexCoords     = this.mousePositionToHexCoords(e);\r\n    const center        = this.hexToPixel(hexCoords);\r\n    const startHexCoord = this.state.startHexCoord;\r\n    const obstacleArray = this.state.obstacleArray;\r\n    const gridSize      = this.state.gridSize;\r\n    let isObstacle      = false;\r\n\r\n    this.setState({\r\n      destination: hexCoords\r\n    });\r\n\r\n    this.clearCanvas(this.mouseCanvas.current);\r\n    if (hexCoords.q >= 0 && hexCoords.q < gridSize.x && hexCoords.r >= 0 && hexCoords.r < gridSize.y) {\r\n      obstacleArray.forEach( obstacle => {\r\n        if (JSON.stringify(obstacle) === JSON.stringify(hexCoords)) {\r\n          isObstacle = true;\r\n        }\r\n      });\r\n      const green         = this.state.colorScheme.green;\r\n      const purple        = this.state.colorScheme.purple;\r\n      const orange        = this.state.colorScheme.orange;\r\n      const brightOrange  = this.state.colorScheme.brightOrange;\r\n      const selectionGrey = this.state.colorScheme.selectionGrey;\r\n      \r\n      const radius = this.state.radius;\r\n      //handles the repositioning of the starting hex\r\n      if (this.state.startHexDrag) {\r\n        const { left: x, top: y } = this.getCanvasPosition(this.canvasHex.current);\r\n        const offsetX   = e.pageX - x;\r\n        const offsetY   = e.pageY - y;\r\n        this.clearCanvas(this.startHexCanvas.current);\r\n        this.drawStartingHex({ x: offsetX, y: offsetY }, radius/1.3);\r\n\r\n        const targetCanvas = this.startHexTargetCanvas.current;\r\n        let targetHex = this.mousePositionToHexCoords(e);\r\n        targetHex = this.hexToPixel(targetHex);\r\n        this.clearCanvas(targetCanvas);\r\n\r\n        if (isObstacle) {\r\n          this.drawHex(targetCanvas, center, radius, green, purple, 5);\r\n        } else {\r\n          this.drawHex(targetCanvas, targetHex, radius, green, undefined, 5);\r\n        }\r\n\r\n      } else if (JSON.stringify(hexCoords) === JSON.stringify(startHexCoord)) {\r\n        this.drawHex(this.mouseCanvas.current, center, radius, brightOrange, green, 5);\r\n      } else if (isObstacle) {\r\n        this.drawHex(this.mouseCanvas.current, center, radius, brightOrange, purple, 5);\r\n      } else {\r\n        this.drawHex(this.mouseCanvas.current, center, radius, orange, selectionGrey, 3);\r\n        this.breadthFirstSearch(startHexCoord);\r\n      }\r\n    }\r\n  }\r\n  mousePositionToHexCoords(e) {\r\n    const { left: x, top: y } = this.getCanvasPosition(this.canvasHex.current);\r\n    const gridStartingPoint   = this.state.gridStartingPoint;\r\n    const radius              = this.state.radius;\r\n\r\n    const offsetX   = e.pageX - x - gridStartingPoint.x;\r\n    const offsetY   = e.pageY - y - gridStartingPoint.y;\r\n    const hexCoords = this.pixelToHex({ x: offsetX, y: offsetY }, radius);\r\n\r\n    return hexCoords;\r\n  }\r\n  getCanvasPosition(canvasID) {\r\n    const rect = canvasID.getBoundingClientRect();\r\n    return { left: rect.left, top: rect.top }\r\n  }\r\n  pixelToHex(point, size) {\r\n    const q = Math.round((Math.sqrt(3)/3 * point.x  -  1/3 * point.y) / size);\r\n    const r = Math.round((                             2/3 * point.y) / size);\r\n    return this.rhombusGridToRectangleGridCoords({ q, r });\r\n  }\r\n  //pixelToHex returns coordinates for a hex grid in the shape of a rhombus\r\n  //this function transforms them into rectangular hex grig coordinates\r\n  rhombusGridToRectangleGridCoords(point) {\r\n    const q = point.q + Math.floor(point.r/2);\r\n    const r = point.r;\r\n    return { q, r };\r\n  } \r\n  hexToPixel(hex) {\r\n    const size = this.state.radius;\r\n    const gridStartingPoint = this.state.gridStartingPoint;\r\n\r\n    //grid didn't align properly when I wasn't using this Math.round mess, but at the same time its probably the cause of some minor pixelToHex inaccuracy\r\n    //not noticable usless you know what to look for, so its good enough 😁\r\n    let x = Math.round(size * Math.sqrt(3)) * (hex.q-1);\r\n    let y = Math.round(size * (                         3/2 * hex.r));\r\n    x += gridStartingPoint.x + Math.round((size) * Math.sqrt(3)) + Math.round(Math.sqrt(3)/2 * size * ((hex.r)%2)) + (hex.r)%2*0;\r\n    x = Math.round(x);\r\n    y += gridStartingPoint.y;\r\n\r\n    return { x, y };\r\n  }\r\n  getHexNeighbors(currentHex) {\r\n    const gridSize = this.state.gridSize;\r\n    if (!(currentHex.q >= 0 && currentHex.q < gridSize.x && currentHex.r >=0 && currentHex.r < gridSize.y)) {\r\n      return undefined;\r\n    }\r\n    const nLeft = { q: currentHex.q-1, r: currentHex.r };\r\n    const nRight = { q: currentHex.q+1, r: currentHex.r };\r\n    const nTopLeft = { q: currentHex.q-1+currentHex.r%2, r: currentHex.r-1 };\r\n    const nTopRight = { q: currentHex.q+currentHex.r%2, r: currentHex.r-1 };\r\n    const nButtomLeft = { q: currentHex.q-1+currentHex.r%2, r: currentHex.r+1 };\r\n    const nBottomRight = { q: currentHex.q+currentHex.r%2, r: currentHex.r+1 };\r\n\r\n    return [nLeft, nRight, nTopLeft, nTopRight, nButtomLeft, nBottomRight];\r\n  }\r\n  breadthFirstSearch(startingHex) {\r\n    let neighborQueue = new MySet();\r\n    neighborQueue.add(JSON.stringify(startingHex));\r\n\r\n    const goalHex = JSON.stringify(this.state.destination);\r\n    let cameFrom = [];\r\n    \r\n    queueLoop:\r\n    for (let currentHex of neighborQueue) {\r\n        currentHex = JSON.parse(currentHex);\r\n        const neighborArray = this.getHexNeighbors(currentHex);\r\n        if (neighborArray!==undefined){\r\n          for (let i = 0; i < neighborArray.length; i++) {\r\n            const item     = neighborArray[i];\r\n            const itemStr  = JSON.stringify(item);\r\n            let isObstacle = false;\r\n\r\n            this.state.obstacleArray.forEach(obstacle => {\r\n              if (JSON.stringify(obstacle)===itemStr) {\r\n                isObstacle = true;\r\n              }\r\n            });\r\n            if (isObstacle) {\r\n              continue;\r\n            }\r\n            neighborQueue.add(itemStr);\r\n            if (neighborQueue.last===itemStr) {\r\n              cameFrom.push({childHex: item, parentHex: currentHex}); \r\n            }\r\n            if (itemStr===goalHex) {\r\n              break queueLoop;\r\n            }\r\n          }\r\n      }\r\n    }\r\n    this.tracePath(cameFrom);\r\n  }\r\n  tracePath(cameFrom) {\r\n    const canvasID = this.mouseCanvas.current;\r\n    let lastPoint  = this.state.destination;\r\n\r\n    for (let i=cameFrom.length-1; i>=0; i--) {\r\n      const path = cameFrom[i];\r\n\r\n      if (JSON.stringify(path.childHex)===JSON.stringify(lastPoint)) {\r\n        const start = this.hexToPixel(path.childHex);\r\n        const end   = this.hexToPixel(path.parentHex);\r\n        lastPoint   = path.parentHex;\r\n        this.drawLine(canvasID, start, end, \"black\", 10);\r\n        this.drawLine(canvasID, start, end, \"grey\", 8, \"square\");\r\n      }\r\n    }\r\n  }\r\n  drawLine(canvasID, start, end, lineColor=\"grey\", lineWidth, lineCap=\"round\") {\r\n    const ctx = canvasID.getContext(\"2d\");\r\n    ctx.strokeStyle = lineColor;\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.lineCap = lineCap;\r\n    ctx.beginPath();\r\n    ctx.moveTo(start.x, start.y);\r\n    ctx.lineTo(end.x, end.y);\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  }\r\n  handleMouseClick(e) {\r\n    const hexCoords = this.mousePositionToHexCoords(e);\r\n    const gridSize  = this.state.gridSize;\r\n\r\n    if (hexCoords.q >= 0 && hexCoords.q < gridSize.x && hexCoords.r >= 0 && hexCoords.r < gridSize.y) {\r\n      let obstacleArray = this.state.obstacleArray;\r\n      let newObstacle = true;\r\n\r\n      for (let i = 0; i < obstacleArray.length; i++) {\r\n        const obstacle = obstacleArray[i];\r\n        if (JSON.stringify(obstacle)===JSON.stringify(hexCoords)) {\r\n          obstacleArray.splice(i,1);\r\n          newObstacle = false;\r\n          break;\r\n        }\r\n      }\r\n      if (newObstacle) {\r\n        if (JSON.stringify(hexCoords)!==JSON.stringify(this.state.startHexCoord)) {\r\n          obstacleArray.push(hexCoords);\r\n        }\r\n      }\r\n      this.setState({\r\n        obstacleArray: obstacleArray\r\n      });\r\n      this.clearCanvas(this.obstacleCanvas.current)\r\n      this.drawObstacles(obstacleArray);\r\n      this.handleMouseMove(e);\r\n    }\r\n  }\r\n  drawObstacles(obstacleArray) {\r\n    const canvasID = this.obstacleCanvas.current;\r\n    const radius   = this.state.radius;\r\n    const purple   = this.state.colorScheme.purple;\r\n    obstacleArray.forEach(element => {\r\n      const center = this.hexToPixel(element);\r\n      this.drawHex(canvasID, center, radius, \"black\", purple);\r\n    });\r\n  }\r\n  handleMouseDown(e) {\r\n    const startingHex = this.state.startHexCoord;\r\n    let hexCoords     = this.mousePositionToHexCoords(e);\r\n\r\n    if (JSON.stringify(hexCoords)===JSON.stringify(startingHex))\r\n    {\r\n      this.setState({\r\n        startHexDrag: true\r\n      });\r\n    }\r\n  }\r\n  async handleMouseUp(e) {\r\n    const hexCoords = this.mousePositionToHexCoords(e);\r\n    \r\n    if (this.state.startHexDrag) {\r\n      await this.setState({\r\n        startHexCoord: hexCoords,\r\n        startHexDrag: false\r\n      });\r\n      this.clearCanvas(this.startHexCanvas.current);\r\n      this.drawStartingHex();\r\n    \r\n    }\r\n  }\r\n  drawStartingHex(center=this.hexToPixel(this.state.startHexCoord), radius=this.state.radius) {\r\n    this.clearCanvas(this.startHexTargetCanvas.current);\r\n    const green = this.state.colorScheme.green;\r\n    this.drawHex(this.startHexCanvas.current, center, radius, \"black\", green);\r\n  }\r\n  clearCanvas(canvasID) {\r\n    const ctx = canvasID.getContext(\"2d\");\r\n    const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n  }\r\n  showTutorial() {\r\n    this.setState({\r\n      showTutorial: !this.state.showTutorial,\r\n      tutorialPageNumber: 1\r\n    });\r\n  }\r\n  previousPage() {\r\n    const page = this.state.tutorialPageNumber - 1;\r\n    this.setState({\r\n      tutorialPageNumber: page\r\n    });\r\n  }\r\n  nextPage() {\r\n    const page = this.state.tutorialPageNumber + 1;\r\n    this.setState({\r\n      tutorialPageNumber: page\r\n    });\r\n  }\r\n  clearObstacles() {\r\n    this.setState(\r\n      {\r\n        obstacleArray: []\r\n      },\r\n      this.clearCanvas(this.obstacleCanvas.current)\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper__canvas\">\r\n        <p>\r\n          Breadth First Search is a pathfinding alghoritm that explores equally in all directions.\r\n          It has many uses, ranging from path finding, procedural map generation, flow field pathfinding, distance maps, and other types of map analysis.\r\n          <br></br>\r\n          <a href=\"javascript:void(0)\" onClick={ this.showTutorial }>Click here for a tutorial.</a>\r\n        </p>\r\n        { this.state.showTutorial && <Tutorial showTutorial={this.showTutorial} tutorialPageNumber={this.state.tutorialPageNumber} previousPage={this.previousPage} nextPage={this.nextPage}/>}\r\n\r\n        <canvas ref={ this.canvasHex }></canvas>\r\n        <canvas ref={ this.obstacleCanvas }></canvas>\r\n        <canvas ref={ this.startHexTargetCanvas }></canvas>\r\n        <canvas ref={ this.startHexCanvas }></canvas>\r\n        <canvas \r\n          ref={ this.mouseCanvas }\r\n          onMouseMove = { this.handleMouseMove }\r\n          onClick = { this.handleMouseClick }\r\n          onMouseDown = { this.handleMouseDown }\r\n          onMouseUp = { this.handleMouseUp }\r\n          ></canvas>\r\n        <button className=\"clearBtn\" onClick={this.clearObstacles}>Clear obstacles</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Breadth;\r\n\r\nclass MySet extends Set {\r\n  add(value) {\r\n    if (!super.has(value)) {\r\n      super.add(value);\r\n      this.last = value;\r\n    }\r\n  }\r\n}","import React from 'react';\r\n\r\nfunction Navigation(props) {\r\n  return(\r\n    <nav className=\"nav\">\r\n      <div className=\"nav__logo\">AlgoVisualize</div>\r\n      {/* Placeholder list for possible future expansion */}\r\n      <ul className=\"nav__list\">\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport Breadth from './components/Breadth';\nimport Header from './components/Navigation';\nimport './main.css'\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <Header/>\n        <div className=\"wrapper__app\">\n          <Breadth/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}